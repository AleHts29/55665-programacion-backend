import { CloudWatchClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../CloudWatchClient";
import { StopMetricStreamsInput, StopMetricStreamsOutput } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type StopMetricStreamsCommandInput = StopMetricStreamsInput;
export declare type StopMetricStreamsCommandOutput = StopMetricStreamsOutput & __MetadataBearer;
/**
 * <p>Stops the streaming of metrics for one or more of your metric streams.</p>
 */
export declare class StopMetricStreamsCommand extends $Command<StopMetricStreamsCommandInput, StopMetricStreamsCommandOutput, CloudWatchClientResolvedConfig> {
    readonly input: StopMetricStreamsCommandInput;
    constructor(input: StopMetricStreamsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: CloudWatchClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StopMetricStreamsCommandInput, StopMetricStreamsCommandOutput>;
    private serialize;
    private deserialize;
}
