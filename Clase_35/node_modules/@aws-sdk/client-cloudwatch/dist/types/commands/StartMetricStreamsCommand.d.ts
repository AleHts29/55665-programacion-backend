import { CloudWatchClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../CloudWatchClient";
import { StartMetricStreamsInput, StartMetricStreamsOutput } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type StartMetricStreamsCommandInput = StartMetricStreamsInput;
export declare type StartMetricStreamsCommandOutput = StartMetricStreamsOutput & __MetadataBearer;
/**
 * <p>Starts the streaming of metrics for one or more of your metric streams.</p>
 */
export declare class StartMetricStreamsCommand extends $Command<StartMetricStreamsCommandInput, StartMetricStreamsCommandOutput, CloudWatchClientResolvedConfig> {
    readonly input: StartMetricStreamsCommandInput;
    constructor(input: StartMetricStreamsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: CloudWatchClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartMetricStreamsCommandInput, StartMetricStreamsCommandOutput>;
    private serialize;
    private deserialize;
}
