import { __awaiter, __generator } from "tslib";
import bowser from "bowser";
/**
 * Default provider to the user agent in browsers. It's a best effort to infer
 * the device information. It uses bowser library to detect the browser and version
 */
export var defaultUserAgent = function (_a) {
    var serviceId = _a.serviceId, clientVersion = _a.clientVersion;
    return function () { return __awaiter(void 0, void 0, void 0, function () {
        var parsedUA, sections;
        var _a, _b, _c, _d, _e, _f, _g;
        return __generator(this, function (_h) {
            parsedUA = (typeof window !== 'undefined' && ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent)) ? bowser.parse(window.navigator.userAgent) : undefined;
            sections = [
                // sdk-metadata
                ["aws-sdk-js", clientVersion],
                // os-metadata
                ["os/" + (((_b = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.os) === null || _b === void 0 ? void 0 : _b.name) || "other"), (_c = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.os) === null || _c === void 0 ? void 0 : _c.version],
                // language-metadata
                // ECMAScript edition doesn't matter in JS.
                ["lang/js"],
                // browser vendor and version.
                ["md/browser", ((_e = (_d = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.browser) === null || _d === void 0 ? void 0 : _d.name) !== null && _e !== void 0 ? _e : "unknown") + "_" + ((_g = (_f = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.browser) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : "unknown")],
            ];
            if (serviceId) {
                // api-metadata
                // service Id may not appear in non-AWS clients
                sections.push(["api/" + serviceId, clientVersion]);
            }
            return [2 /*return*/, sections];
        });
    }); };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sTUFBTSxNQUFNLFFBQVEsQ0FBQztBQUk1Qjs7O0dBR0c7QUFDSCxNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBRyxVQUFDLEVBR1A7UUFGeEIsU0FBUyxlQUFBLEVBQ1QsYUFBYSxtQkFBQTtJQUNxQyxPQUFBOzs7O1lBQzVDLFFBQVEsR0FBRyxDQUFDLE9BQU8sTUFBTSxLQUFLLFdBQVcsV0FBSSxNQUFNLGFBQU4sTUFBTSx1QkFBTixNQUFNLENBQUUsU0FBUywwQ0FBRSxTQUFTLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztZQUNsSSxRQUFRLEdBQWM7Z0JBQzFCLGVBQWU7Z0JBQ2YsQ0FBQyxZQUFZLEVBQUUsYUFBYSxDQUFDO2dCQUM3QixjQUFjO2dCQUNkLENBQUMsU0FBTSxPQUFBLFFBQVEsYUFBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRSxFQUFFLDBDQUFFLElBQUksS0FBSSxPQUFPLENBQUUsUUFBRSxRQUFRLGFBQVIsUUFBUSx1QkFBUixRQUFRLENBQUUsRUFBRSwwQ0FBRSxPQUFPLENBQUM7Z0JBQzlELG9CQUFvQjtnQkFDcEIsMkNBQTJDO2dCQUMzQyxDQUFDLFNBQVMsQ0FBQztnQkFDWCw4QkFBOEI7Z0JBQzlCLENBQUMsWUFBWSxFQUFFLGFBQUcsUUFBUSxhQUFSLFFBQVEsdUJBQVIsUUFBUSxDQUFFLE9BQU8sMENBQUUsSUFBSSxtQ0FBSSxTQUFTLHVCQUFJLFFBQVEsYUFBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRSxPQUFPLDBDQUFFLE9BQU8sbUNBQUksU0FBUyxDQUFFLENBQUM7YUFDckcsQ0FBQztZQUVGLElBQUksU0FBUyxFQUFFO2dCQUNiLGVBQWU7Z0JBQ2YsK0NBQStDO2dCQUMvQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsU0FBTyxTQUFXLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQzthQUNwRDtZQUVELHNCQUFPLFFBQVEsRUFBQzs7U0FDakI7QUFyQm1ELENBcUJuRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvdmlkZXIsIFVzZXJBZ2VudCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IGJvd3NlciBmcm9tIFwiYm93c2VyXCI7XG5cbmltcG9ydCB7IERlZmF1bHRVc2VyQWdlbnRPcHRpb25zIH0gZnJvbSBcIi4vY29uZmlndXJhdGlvbnNcIjtcblxuLyoqXG4gKiBEZWZhdWx0IHByb3ZpZGVyIHRvIHRoZSB1c2VyIGFnZW50IGluIGJyb3dzZXJzLiBJdCdzIGEgYmVzdCBlZmZvcnQgdG8gaW5mZXJcbiAqIHRoZSBkZXZpY2UgaW5mb3JtYXRpb24uIEl0IHVzZXMgYm93c2VyIGxpYnJhcnkgdG8gZGV0ZWN0IHRoZSBicm93c2VyIGFuZCB2ZXJzaW9uXG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0VXNlckFnZW50ID0gKHtcbiAgc2VydmljZUlkLFxuICBjbGllbnRWZXJzaW9uLFxufTogRGVmYXVsdFVzZXJBZ2VudE9wdGlvbnMpOiBQcm92aWRlcjxVc2VyQWdlbnQ+ID0+IGFzeW5jICgpID0+IHtcbiAgY29uc3QgcGFyc2VkVUEgPSAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Py5uYXZpZ2F0b3I/LnVzZXJBZ2VudCkgPyBib3dzZXIucGFyc2Uod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpIDogdW5kZWZpbmVkO1xuICBjb25zdCBzZWN0aW9uczogVXNlckFnZW50ID0gW1xuICAgIC8vIHNkay1tZXRhZGF0YVxuICAgIFtcImF3cy1zZGstanNcIiwgY2xpZW50VmVyc2lvbl0sXG4gICAgLy8gb3MtbWV0YWRhdGFcbiAgICBbYG9zLyR7cGFyc2VkVUE/Lm9zPy5uYW1lIHx8IFwib3RoZXJcIn1gLCBwYXJzZWRVQT8ub3M/LnZlcnNpb25dLFxuICAgIC8vIGxhbmd1YWdlLW1ldGFkYXRhXG4gICAgLy8gRUNNQVNjcmlwdCBlZGl0aW9uIGRvZXNuJ3QgbWF0dGVyIGluIEpTLlxuICAgIFtcImxhbmcvanNcIl0sXG4gICAgLy8gYnJvd3NlciB2ZW5kb3IgYW5kIHZlcnNpb24uXG4gICAgW1wibWQvYnJvd3NlclwiLCBgJHtwYXJzZWRVQT8uYnJvd3Nlcj8ubmFtZSA/PyBcInVua25vd25cIn1fJHtwYXJzZWRVQT8uYnJvd3Nlcj8udmVyc2lvbiA/PyBcInVua25vd25cIn1gXSxcbiAgXTtcblxuICBpZiAoc2VydmljZUlkKSB7XG4gICAgLy8gYXBpLW1ldGFkYXRhXG4gICAgLy8gc2VydmljZSBJZCBtYXkgbm90IGFwcGVhciBpbiBub24tQVdTIGNsaWVudHNcbiAgICBzZWN0aW9ucy5wdXNoKFtgYXBpLyR7c2VydmljZUlkfWAsIGNsaWVudFZlcnNpb25dKTtcbiAgfVxuXG4gIHJldHVybiBzZWN0aW9ucztcbn07XG4iXX0=